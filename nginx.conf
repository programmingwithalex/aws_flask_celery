# X-Forwarded-For header is used to maintain a history of the client IP addresses traversed through
# multiple proxies or load balancers. Each proxy that handles the request appends its IP address to
# the X-Forwarded-For header value. This header provides a way for the backend server to
# determine the chain of proxies that the request passed through,
# with the client's IP being the rightmost value in the header

# In the provided NGINX configuration, both headers are being set using the directives proxy_set_header
# X-Real-IP $remote_addr; and proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;. NGINX sets the
# X-Real-IP header to the client's IP address ($remote_addr), and the X-Forwarded-For header appends the
# client's IP address to the existing value of the header ($proxy_add_x_forwarded_for).
# By including these headers in the proxy configuration, the backend server can access the client's
# real IP address and determine the original source of the request, even when it passes through one or more proxy servers.

events {
    worker_connections 1024;  # sets max # of simultaneous connections that can be opened by worker process
}

http {
    server {
        listen 80;  # configures server to listen on port 80 (HTTP)

        location / {
            # proxy_pass http://flask_app:5000;  # forwards incoming requests to "main_app" backend server running on port 5000
            proxy_pass http://localhost:5000;  # use localhost when running on ECS

            # ************************** #
            # * not necessary but good practice to have
            proxy_set_header Host $host;  # sets "Host" header to original value from the client request
            proxy_set_header X-Real-IP $remote_addr;  # sets "X-Real-IP" header to client's IP address
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # appends client's IP address to the "X-Forwarded-For" header
            # ************************** #
        }

        location /flower/ {
            # proxy_pass http://celery_flower:5555; # forwards requests "/flower/" prefix "celery_flower" backend server running on port 5555
            proxy_pass http://localhost:5555;  # use localhost when running on ECS

            # ************************** #
            # * not necessary but good practice to have
            proxy_set_header Host $host;  # sets "Host" header to original value from the client request
            proxy_set_header X-Real-IP $remote_addr;  # sets "X-Real-IP" header to client's IP address
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # appends client's IP address to the "X-Forwarded-For" header
            # ************************** #
        }

        # verify loading from nginx -->
        #  - when loading webpage go to developer tools Network tab
        #  - click script.js or style.css and check the response headers entry "Server"
        location /static/  {
            # example: tells Nginx that files with the .css extension should be served with the text/css MIME type
            #          informs the browser that the content is a Cascading Style Sheet (CSS) file
            # including the mime.types file in the Nginx configuration ensures that Nginx can correctly identify and
            # serve a wide range of file types, from images and audio files to documents and scripts.
            # this helps to ensure that the content is displayed correctly in the client's web browser.
            include  /etc/nginx/mime.types;
            # specifying root here as `/` b/c `static` directory copied to nginx directory in Dockerfile
            root /;
        }
    }
}
